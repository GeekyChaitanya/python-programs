"""
Armstrong number checker
checks if the number given is equal to the sum of 
power of each digit of the number to the number of digits
Example- 153 = 1^3 + 5^3 + 3^3  (number of digits = 3)
         1634 = 1^4 + 6^4 + 3^4 + 4^4  (number of digits = 4)
"""
n=input("Enter number to check : ")
sum=0
#traversing the digits of input in string form
for i in n:
    #adding the digit to the power of number of digits in sum variable     
    sum += int(i)**len(n)
#ternary operator, checking if resultant sum is equal to the given number itself
print("Yes, its an Armstrong number") if (sum==int(n)) else print("No, its not an Armstrong number")
#=======================================================================================================================================================================================================================#

"""
Palindrome checker
checks if the given string is a palindrome or not, ignores spaces
and searches only the characters in the given string
Example- hello (olleh)  | False
         catac (catac)  | True

For a given string:-

       def is_palindrome(s):
          s = s.lower()  # Convert the string to lowercase for case-insensitive comparison
         s = ''.join(c for c in s if c.isalnum())  # Remove non-alphanumeric characters
         return s == s[::-1]
      user_input = input("Enter a string to check for palindrome: ")
      if is_palindrome(user_input):
             print(f"{user_input} is a palindrome!")
     else:
             print(f"{user_input} is not a palindrome.")


#=======================================================================================================================================================================================================================#
Happy Number checker
 A happy number is a number that, when you repeatedly replace it with the sum of the squares of its digits, eventually reaches the number 1.
If a number becomes 1, it is a happy number. If the process of summing the squares of digits leads to an endless loop without reaching 1, the number is not a happy number.
Example:- 19 is Happy Number,
1^2 + 9^2 = 82
8^2 + 2^2 = 68
6^2 + 8^2 = 100
1^2 + 0^2 + 0^2 = 1          

          def isHappyNumber(n):
	st=set()
	while (1):
		n = numSquareSum(n)
		if (n == 1):
			return True
		if n not in st:
			return False
		st.insert(n)




if is_happy_number(number_to_check):
    print(f"{number_to_check} is a happy number!")
else:
    print(f"{number_to_check} is not a happy number.")
